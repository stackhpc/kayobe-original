---
- name: Ensure EPEL repo is installed
  yum:
    name: epel-release
    state: installed
  become: True
  when: ansible_os_family == 'RedHat'

- name: Include OS family-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Ensure required packages are installed
  package:
    name: "{{ item }}"
    state: installed
  become: True
  with_items: "{{ kolla_package_dependencies }}"

- name: Ensure source code checkout path exists
  file:
    path: "{{ kolla_source_path | dirname }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  become: True
  when: kolla_ctl_install_type == 'source'

- name: Ensure Kolla source code checkout exists
  git:
    repo: "{{ kolla_source_url }}"
    dest: "{{ kolla_source_path }}"
    version: "{{ kolla_source_version }}"
  when: kolla_ctl_install_type == 'source'

- name: Ensure the latest version of pip is installed
  pip:
    name: "{{ item.name }}"
    state: latest
    virtualenv: "{{ kolla_venv }}"
  with_items:
    - { name: pip }

- name: Ensure required Python packages are installed
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    virtualenv: "{{ kolla_venv }}"
  with_items:
    # In version 2.0.0, docker renamed the docker-py python package to docker.
    # Kolla requires the docker package rather than the docker-py package.
    - name: docker-py
      state: absent
    - name: docker
    # Intall Kolla from source.
    - name: "{{ kolla_source_path }}"
      install: "{{ kolla_ctl_install_type == 'source' }}"
    # Intall Kolla from PyPI.
    - name: "kolla"
      version: "{{ kolla_openstack_release }}"
      install: "{{ kolla_ctl_install_type == 'binary' }}"
    # Required for kolla-genpwd.
    - name: PyYAML
      version: "3.12"
  when: item.install | default(True) | bool
